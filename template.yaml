AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for hauzzy-serverless
Globals:
  Function:
    Runtime: nodejs12.x
    Tracing: Active
    Timeout: 30
    Architectures:
        - arm64
  Api:
    TracingEnabled: true


Resources:
  HauzzyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      EndpointConfiguration:
        Type: REGIONAL
      Domain:
        DomainName: www.hauzzy.com
        CertificateArn: arn:aws:acm:us-east-1:925250455200:certificate/3e2bca34-59bc-454a-84cf-bd70c6d78a58
      
  GetPropertiesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    DependsOn: ParameterStoreCredentialsRole
    Properties:
      FunctionName: GetPropertiesFunction
      CodeUri: get-properties/
      Handler: app.lambdaHandler
      MemorySize: 256
      Role: !GetAtt ParameterStoreCredentialsRole.Arn
      Events:
        GetPropertiesApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api/properties
            Method: get
            RestApiId:
              Ref: HauzzyApi
  
  ParameterStoreCredentialsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        -
          PolicyName: 'ParameterStoreAccess'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - 'ssm:GetParameter*'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/db*'
        -
          PolicyName: 'FunctionXRayAccess'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - 'xray:PutTraceSegments'
                  - 'xray:PutTelemetryRecords'
                Resource: '*'
  
  ParameterStoreEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: 'alias/ParameterStoreKeySAM'
      TargetKeyId: !Ref ParameterStoreEncryptionKey

  ParameterStoreEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: 'Encryption key for secret config values for the Parameter Store'
      Enabled: True
      EnableKeyRotation: False
      KeyPolicy:
        Version: '2012-10-17'
        Id: 'key-default-1'
        Statement:
          -
            Sid: 'Allow administration of the key & encryption of new values'
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/Administrator'
            Action:
              - 'kms:Create*'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:Describe*'
              - 'kms:Enable*'
              - 'kms:List*'
              - 'kms:Put*'
              - 'kms:Update*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Get*'
              - 'kms:Delete*'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
            Resource: '*'
          -
            Sid: 'Allow use of the key'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt ParameterStoreCredentialsRole.Arn
                - !GetAtt CodeBuildIAMRole.Arn
                - arn:aws:iam::925250455200:role/CloudFormationServiceRole
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
              - 'kms:PutKeyPolicy'
            Resource: '*'

  ServerlessPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ServerlessPipeline
      RoleArn: arn:aws:iam::925250455200:role/service-role/AWSCodePipelineServiceRole-us-east-1-HauzzyServerlessPipeline
      ArtifactStore:
        Type: S3
        Location: aws-sam-cli-managed-default-samclisourcebucket-chfgod7k1eyc
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:us-east-1:925250455200:connection/88c6b744-129c-417b-82ad-4e0b78cfb2d1"
                FullRepositoryId: "rafaelmontas/hauzzy-serverless"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                -  Name: SourceArtifact
        -
          Name: Build
          Actions:
            -
              Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName:
                  Ref: SamCodeBuild
              OutputArtifacts:
                -  Name: BuildArtifact
        -
          Name: Deploy
          Actions:
            -
              Name: Deploy
              InputArtifacts:
                - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref AWS::StackName
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: arn:aws:iam::925250455200:role/CloudFormationServiceRole
                TemplatePath: BuildArtifact::.aws-sam/packaged.yaml


              
  
  SamCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: hauzzy-serverless-stack-build
      Description: Build process for Hauzzy serverless Application deployed using AWS SAM
      ServiceRole: !GetAtt CodeBuildIAMRole.Arn
      Artifacts:
        Type: S3
        Location: aws-sam-cli-managed-default-samclisourcebucket-chfgod7k1eyc
        Name: hauzzy-serverless-stack-build
        Path: ''
        NamespaceType: NONE
        Packaging: NONE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
      Source:
        Location: https://github.com/rafaelmontas/hauzzy-serverless.git
        Type: GITHUB
        GitCloneDepth: 1
      Triggers:
        Webhook: false
      BadgeEnabled: false
      LogsConfig:
        CloudWatchLogs: 
          Status: ENABLED
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      TimeoutInMinutes: 10
  
  CodeBuildIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Provides CodeBuild permission to access API GW, Lambda and Cloudformation
      #Provide Codebuild permission to assume this role
      AssumeRolePolicyDocument: {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"codebuild.amazonaws.com"},"Action":"sts:AssumeRole"}]}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
      # Path: '/hauzzy-serverless-sam/'
      Policies:
        -
          PolicyName: !Sub 'codebuild-access-cloudwatch-s3-${AWS::Region}'
          PolicyDocument: !Sub '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Resource":["arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/hauzzy-serverless-stack-build","arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/hauzzy-serverless-stack-build:*"],"Action":["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"]},{"Effect":"Allow","Resource":["arn:aws:s3:::aws-sam-cli-managed-default-samclisourcebucket-chfgod7k1eyc/*"],"Action":["s3:PutObject","s3:GetObject","s3:GetObjectVersion","s3:GetBucketAcl","s3:GetBucketLocation"]},{"Effect":"Allow","Resource":["arn:aws:s3:::aws-sam-cli-managed-default-samclisourcebucket-chfgod7k1eyc","arn:aws:s3:::aws-sam-cli-managed-default-samclisourcebucket-chfgod7k1eyc/*"],"Action":["s3:PutObject","s3:GetBucketAcl","s3:GetBucketLocation"]},{"Effect":"Allow","Action":["codebuild:CreateReportGroup","codebuild:CreateReport","codebuild:UpdateReport","codebuild:BatchPutTestCases"],"Resource":["arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/hauzzy-serverless-sam-*"]}]}'


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HauzzyApi:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${HauzzyApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  GetPropertiesFunction:
    Description: "GetPropertiesFunction Lambda Function ARN"
    Value: !GetAtt GetPropertiesFunction.Arn
  # GetPropertiesFunctionIamRole:
  #   Description: "Implicit IAM Role created for GetPropertiesFunction function"
  #   Value: !GetAtt GetPropertiesFunctionRole.Arn
